{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/WEB-DEVELOPMENT/REACT-PROJECTS/MERN-social-network/client/src/components/layout/Alert.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\"; // We desctrctured the alerts so we dont have to call them with props\n\nconst Alert = ({\n  alerts\n}) => alerts !== null && alerts.length > 0 && alerts.map(alert =>\n/*#__PURE__*/\n// alert.alertType is to make the alert dynamic. It will change the BG\n// depending on if it's succes, danger, etc\nReact.createElement(\"div\", {\n  key: alert.id,\n  className: `alert alert-${alert.alertType}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, alert.msg));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired\n}; // we want to get the alert State to this component.\n//  inside we will call whatever we want to get from the root reducer (index).\n// In this case, to get the state alert reducer we will call state.alert\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);","map":{"version":3,"sources":["/home/rodrigo/WEB-DEVELOPMENT/REACT-PROJECTS/MERN-social-network/client/src/components/layout/Alert.js"],"names":["React","PropTypes","connect","Alert","alerts","length","map","alert","id","alertType","msg","propTypes","array","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACZA,MAAM,KAAK,IAAX,IACAA,MAAM,CAACC,MAAP,GAAgB,CADhB,IAEAD,MAAM,CAACE,GAAP,CAAYC,KAAD;AAAA;AACT;AACA;AACA;AAAK,EAAA,GAAG,EAAEA,KAAK,CAACC,EAAhB;AAAoB,EAAA,SAAS,EAAG,eAAcD,KAAK,CAACE,SAAU,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,KAAK,CAACG,GADT,CAHF,CAHF;;AAWAP,KAAK,CAACQ,SAAN,GAAkB;AAChBP,EAAAA,MAAM,EAAEH,SAAS,CAACW,KAAV,CAAgBC;AADR,CAAlB,C,CAIA;AACA;AACA;;AACA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCX,EAAAA,MAAM,EAAEW,KAAK,CAACR;AADoB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACY,eAAD,CAAP,CAAyBX,KAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n// We desctrctured the alerts so we dont have to call them with props\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map((alert) => (\n    // alert.alertType is to make the alert dynamic. It will change the BG\n    // depending on if it's succes, danger, etc\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n};\n\n// we want to get the alert State to this component.\n//  inside we will call whatever we want to get from the root reducer (index).\n// In this case, to get the state alert reducer we will call state.alert\nconst mapStateToProps = (state) => ({\n  alerts: state.alert,\n});\n\nexport default connect(mapStateToProps)(Alert);\n"]},"metadata":{},"sourceType":"module"}