{"ast":null,"code":"import React,{Fragment,useEffect}from\"react\";import{Link}from\"react-router-dom\";import Moment from\"react-moment\";import{connect}from\"react-redux\";import Spinner from\"../layout/Spinner\";import{getPost,addLike,removeLike,deletePost}from\"../../actions/post\";import PostItem from\"../posts/PostItem\";import CommentForm from\"./CommentForm\";import CommentItem from\"./CommentItem\";//fpor getting the id from the URL we pull out props.match\nvar Post=function Post(_ref){var getPost=_ref.getPost,_ref$post=_ref.post,post=_ref$post.post,loading=_ref$post.loading,match=_ref.match;useEffect(function(){getPost(match.params.id);},[getPost]);return loading||post===null?/*#__PURE__*/React.createElement(Spinner,null):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Link,{to:\"/posts\",className:\"btn btn-light\"},\"Back to Posts\"),/*#__PURE__*/React.createElement(PostItem,{post:post,showActions:false}),/*#__PURE__*/React.createElement(CommentForm,{postId:post._id}),/*#__PURE__*/React.createElement(\"div\",{className:\"comments\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Comments\"),post.comments.map(function(comment){return/*#__PURE__*/React.createElement(CommentItem,{key:comment._id,comment:comment,postId:post._id});})));};var mapStateToProps=function mapStateToProps(state){return{post:state.post};};export default connect(mapStateToProps,{getPost:getPost})(Post);","map":{"version":3,"sources":["/Users/rodrigomac/WEB-DEVELOPMENT/REACT-PROJECTS/Social-Network-App-MERN/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","Link","Moment","connect","Spinner","getPost","addLike","removeLike","deletePost","PostItem","CommentForm","CommentItem","Post","post","loading","match","params","id","_id","comments","map","comment","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,OAAT,CAAkBC,OAAlB,CAA2BC,UAA3B,CAAuCC,UAAvC,KAAyD,oBAAzD,CACA,MAAOC,CAAAA,QAAP,KAAqB,mBAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA;AACA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAiD,IAA9CP,CAAAA,OAA8C,MAA9CA,OAA8C,gBAArCQ,IAAqC,CAA7BA,IAA6B,WAA7BA,IAA6B,CAAvBC,OAAuB,WAAvBA,OAAuB,CAAZC,KAAY,MAAZA,KAAY,CAC5Df,SAAS,CAAC,UAAM,CACdK,OAAO,CAACU,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP,CACD,CAFQ,CAEN,CAACZ,OAAD,CAFM,CAAT,CAIA,MAAOS,CAAAA,OAAO,EAAID,IAAI,GAAK,IAApB,cACL,oBAAC,OAAD,MADK,cAGL,oBAAC,QAAD,mBACE,oBAAC,IAAD,EAAM,EAAE,CAAC,QAAT,CAAkB,SAAS,CAAC,eAA5B,kBADF,cAIE,oBAAC,QAAD,EAAU,IAAI,CAAEA,IAAhB,CAAsB,WAAW,CAAE,KAAnC,EAJF,cAKE,oBAAC,WAAD,EAAa,MAAM,CAAEA,IAAI,CAACK,GAA1B,EALF,cAME,2BAAK,SAAS,CAAC,UAAf,eACE,yCADF,CAEGL,IAAI,CAACM,QAAL,CAAcC,GAAd,CAAkB,SAACC,OAAD,qBACjB,oBAAC,WAAD,EAAa,GAAG,CAAEA,OAAO,CAACH,GAA1B,CAA+B,OAAO,CAAEG,OAAxC,CAAiD,MAAM,CAAER,IAAI,CAACK,GAA9D,EADiB,EAAlB,CAFH,CANF,CAHF,CAiBD,CAtBD,CA6BA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCV,IAAI,CAAEU,KAAK,CAACV,IADsB,CAAZ,EAAxB,CAIA,cAAeV,CAAAA,OAAO,CAACmB,eAAD,CAAkB,CACtCjB,OAAO,CAAPA,OADsC,CAAlB,CAAP,CAEZO,IAFY,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getPost, addLike, removeLike, deletePost } from \"../../actions/post\";\nimport PostItem from \"../posts/PostItem\";\nimport CommentForm from \"./CommentForm\";\nimport CommentItem from \"./CommentItem\";\n\n//fpor getting the id from the URL we pull out props.match\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to=\"/posts\" className=\"btn btn-light\">\n        Back to Posts\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n      <div className=\"comments\">\n        <h3>Comments</h3>\n        {post.comments.map((comment) => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, {\n  getPost,\n})(Post);\n"]},"metadata":{},"sourceType":"module"}