{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";// We desctrctured the alerts so we dont have to call them with props\nvar Alert=function Alert(_ref){var alerts=_ref.alerts;return alerts!==null&&alerts.length>0&&alerts.map(function(alert){return/*#__PURE__*/ (// alert.alertType is to make the alert dynamic. It will change the BG\n// depending on if it's succes, danger, etc\nReact.createElement(\"div\",{key:alert.id,className:\"alert alert-\".concat(alert.alertType)},alert.msg));});};// we want to get the alert State to this component.\n//  inside we will call whatever we want to get from the root reducer (index).\n// In this case, to get the state alert reducer we will call state.alert\nvar mapStateToProps=function mapStateToProps(state){return{alerts:state.alert};};export default connect(mapStateToProps)(Alert);","map":{"version":3,"sources":["/Users/rodrigomac/WEB-DEVELOPMENT/REACT-PROJECTS/Social-Network-App-MERN/client/src/components/layout/Alert.js"],"names":["React","connect","Alert","alerts","length","map","alert","id","alertType","msg","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,OAAT,KAAwB,aAAxB,CAEA;AACA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,UAAGC,CAAAA,MAAH,MAAGA,MAAH,OACZA,CAAAA,MAAM,GAAK,IAAX,EACAA,MAAM,CAACC,MAAP,CAAgB,CADhB,EAEAD,MAAM,CAACE,GAAP,CAAW,SAACC,KAAD,sBACT;AACA;AACA,2BAAK,GAAG,CAAEA,KAAK,CAACC,EAAhB,CAAoB,SAAS,uBAAiBD,KAAK,CAACE,SAAvB,CAA7B,EACGF,KAAK,CAACG,GADT,CAHS,GAAX,CAHY,EAAd,CAeA;AACA;AACA;AACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCR,MAAM,CAAEQ,KAAK,CAACL,KADoB,CAAZ,EAAxB,CAIA,cAAeL,CAAAA,OAAO,CAACS,eAAD,CAAP,CAAyBR,KAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n// We desctrctured the alerts so we dont have to call them with props\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map((alert) => (\n    // alert.alertType is to make the alert dynamic. It will change the BG\n    // depending on if it's succes, danger, etc\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n};\n\n// we want to get the alert State to this component.\n//  inside we will call whatever we want to get from the root reducer (index).\n// In this case, to get the state alert reducer we will call state.alert\nconst mapStateToProps = (state) => ({\n  alerts: state.alert,\n});\n\nexport default connect(mapStateToProps)(Alert);\n"]},"metadata":{},"sourceType":"module"}