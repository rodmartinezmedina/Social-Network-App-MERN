{"ast":null,"code":"import React,{Fragment,useEffect}from\"react\";import{connect}from\"react-redux\";import Spinner from\"../layout/Spinner\";import{getProfiles}from\"../../actions/profile\";import ProfileItem from\"./ProfileItem\";var Profiles=function Profiles(_ref){var getProfiles=_ref.getProfiles,_ref$profile=_ref.profile,profiles=_ref$profile.profiles,loading=_ref$profile.loading;useEffect(function(){getProfiles();},[getProfiles]);return/*#__PURE__*/React.createElement(Fragment,null,loading?/*#__PURE__*/React.createElement(Spinner,null):/*#__PURE__*/React.createElement(\"div\",{className:\"profiles-page-container\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"large text-primary\"},\"Network Users\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fab fa-connectdevelop\"}),\"Browse and connect with other users\"),/*#__PURE__*/React.createElement(\"div\",{className:\"profiles\"},profiles.length>0?profiles.map(function(profile){return/*#__PURE__*/React.createElement(ProfileItem,{key:profile._id,profile:profile});}):/*#__PURE__*/React.createElement(\"h4\",null,\"No Profiles found...\"))));};var mapStateToProps=function mapStateToProps(state){return{profile:state.profile};};export default connect(mapStateToProps,{getProfiles:getProfiles})(Profiles);","map":{"version":3,"sources":["/Users/rodrigomac/WEB-DEVELOPMENT/REACT-PROJECTS/Social-Network-App-MERN/client/src/components/profiles/Profiles.js"],"names":["React","Fragment","useEffect","connect","Spinner","getProfiles","ProfileItem","Profiles","profile","profiles","loading","length","map","_id","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,WAAT,KAA4B,uBAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAqD,IAAlDF,CAAAA,WAAkD,MAAlDA,WAAkD,mBAArCG,OAAqC,CAA1BC,QAA0B,cAA1BA,QAA0B,CAAhBC,OAAgB,cAAhBA,OAAgB,CACpER,SAAS,CAAC,UAAM,CACdG,WAAW,GACZ,CAFQ,CAEN,CAACA,WAAD,CAFM,CAAT,CAIA,mBACE,oBAAC,QAAD,MACGK,OAAO,cACN,oBAAC,OAAD,MADM,cAGN,2BAAK,SAAS,CAAC,yBAAf,eACE,0BAAI,SAAS,CAAC,oBAAd,kBADF,cAGE,yBAAG,SAAS,CAAC,MAAb,eACE,yBAAG,SAAS,CAAC,uBAAb,EADF,uCAHF,cAQE,2BAAK,SAAS,CAAC,UAAf,EACGD,QAAQ,CAACE,MAAT,CAAkB,CAAlB,CACCF,QAAQ,CAACG,GAAT,CAAa,SAACJ,OAAD,qBACX,oBAAC,WAAD,EAAa,GAAG,CAAEA,OAAO,CAACK,GAA1B,CAA+B,OAAO,CAAEL,OAAxC,EADW,EAAb,CADD,cAKC,qDANJ,CARF,CAJJ,CADF,CA0BD,CA/BD,CAsCA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCP,OAAO,CAAEO,KAAK,CAACP,OADmB,CAAZ,EAAxB,CAIA,cAAeL,CAAAA,OAAO,CAACW,eAAD,CAAkB,CAAET,WAAW,CAAXA,WAAF,CAAlB,CAAP,CAA0CE,QAA1C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getProfiles } from \"../../actions/profile\";\nimport ProfileItem from \"./ProfileItem\";\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <div className=\"profiles-page-container\">\n          <h1 className=\"large text-primary\">Network Users</h1>\n\n          <p className=\"lead\">\n            <i className=\"fab fa-connectdevelop\"></i>\n            Browse and connect with other users\n          </p>\n\n          <div className=\"profiles\">\n            {profiles.length > 0 ? (\n              profiles.map((profile) => (\n                <ProfileItem key={profile._id} profile={profile} />\n              ))\n            ) : (\n              <h4>No Profiles found...</h4>\n            )}\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n"]},"metadata":{},"sourceType":"module"}