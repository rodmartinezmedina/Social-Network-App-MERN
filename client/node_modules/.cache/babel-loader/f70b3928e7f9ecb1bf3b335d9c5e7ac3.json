{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from \"./types\"; //Register user action\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      //the data we get back in this case is the token\n      payload: res.data\n    });\n  } catch (err) {\n    //getting array of errors from the backend\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(errors => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL //we dont need payload as register_fail in auth reducer does not give back anything\n\n    });\n  }\n};","map":{"version":3,"sources":["/home/rodrigo/WEB-DEVELOPMENT/REACT-PROJECTS/MERN-social-network/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","register","name","email","password","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,SAAhD,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAOC,QAAP,IAAoB;AACzE,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAER,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AACA,MAAI;AACF,UAAMO,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB;AACAD,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEd,gBADC;AAEP;AACAe,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAHN,KAAD,CAAR;AAKD,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ;AACA,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAgBF,MAAD,IAAYZ,QAAQ,CAACP,QAAQ,CAACsB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAnC;AACD;;AACDhB,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEb,aADC,CAEP;;AAFO,KAAD,CAAR;AAID;AACF,CAzBM","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from \"./types\";\n\n//Register user action\nexport const register = ({ name, email, password }) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ name, email, password });\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      //the data we get back in this case is the token\n      payload: res.data,\n    });\n  } catch (err) {\n    //getting array of errors from the backend\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((errors) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n    dispatch({\n      type: REGISTER_FAIL,\n      //we dont need payload as register_fail in auth reducer does not give back anything\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}