{"ast":null,"code":"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { GET_PROFILE, GET_PROFILES, PROFILE_ERROR, CLEAR_PROFILE, UPDATE_PROFILE, ACCOUNT_DELETED, GET_REPOS, NO_REPOS } from \"./types\"; //Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  //we wanna hit GET api/profile/me with whatever user is logged in user:req.user.id\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: CLEAR_PROFILE\n    });\n    dispatch({\n      type: NO_REPOS // type: PROFILE_ERROR,\n      // // we have error in the state. we get the error message text\n      // payload: {\n      //   msg: err.response.statusText,\n      //   status: err.response.status,\n      // },\n\n    });\n  }\n}; //Get all profiles\n\nexport const getProfiles = () => async dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n\n  try {\n    const res = await axios.get(\"/api/profile\");\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      // we have error in the state. we get the error message text\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get Profile by ID (by userID not by profile Id )\n\nexport const getProfileById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      // we have error in the state. we get the error message text\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get Githubrepos\n\nexport const getGithubRepos = username => async dispatch => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      // we have error in the state. we get the error message text\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Create or update a profile\n//history object has method push that redirects us to a client side route\n//to know if we are creating or updating we set a parameter edit(false by default)\n//we could also create 2 different funcs to create and update\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    //config always because we are sending data\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }; //post request to /api/profile\n\n    const res = await axios.post(\"/api/profile\", formData, config); //payload will be the res.data that will actually be the profile\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\")); //For redirecting in an action we cant do it with the Redirect component\n    // So we have to pass it the history object that has the push method on it\n\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //\n//Add Experience\n//\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    //config always because we are sending data\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/experience\", formData, config); //payload will be the res.data that will actually be the profile\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Added\", \"success\")); //For redirecting in an action we cant do it with the Redirect component\n    // So we have to pass it the history object that has the push method on it\n\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //\n//Add Education\n//\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    //config always because we are sending data\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const res = await axios.put(\"/api/profile/education\", formData, config); //payload will be the res.data that will actually be the profile\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Added\", \"success\")); //For redirecting in an action we cant do it with the Redirect component\n    // So we have to pass it the history object that has the push method on it\n\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete Education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete account & profile\n\nexport const deleteAccount = id => async dispatch => {\n  if (window.confirm(\"Are you sure you want to DELETE YOUR ACCOUNT? This can NOT be undone\")) {\n    try {\n      await axios.delete(`/api/profile`);\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert(\"Your acount has been permanently deleted\", \"success\"));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/home/rodrigo/WEB-DEVELOPMENT/REACT-PROJECTS/MERN-social-network/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","GET_PROFILES","PROFILE_ERROR","CLEAR_PROFILE","UPDATE_PROFILE","ACCOUNT_DELETED","GET_REPOS","NO_REPOS","getCurrentProfile","dispatch","res","get","type","payload","data","err","getProfiles","msg","response","statusText","status","getProfileById","userId","getGithubRepos","username","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { setAlert } from \"./alert\";\n\nimport {\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  UPDATE_PROFILE,\n  ACCOUNT_DELETED,\n  GET_REPOS,\n  NO_REPOS,\n} from \"./types\";\n\n//Get current users profile\nexport const getCurrentProfile = () => async (dispatch) => {\n  //we wanna hit GET api/profile/me with whatever user is logged in user:req.user.id\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({ type: CLEAR_PROFILE });\n\n    dispatch({\n      type: NO_REPOS,\n      // type: PROFILE_ERROR,\n      // // we have error in the state. we get the error message text\n      // payload: {\n      //   msg: err.response.statusText,\n      //   status: err.response.status,\n      // },\n    });\n  }\n};\n\n//Get all profiles\nexport const getProfiles = () => async (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n\n  try {\n    const res = await axios.get(\"/api/profile\");\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      // we have error in the state. we get the error message text\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n//Get Profile by ID (by userID not by profile Id )\nexport const getProfileById = (userId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      // we have error in the state. we get the error message text\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n//Get Githubrepos\nexport const getGithubRepos = (username) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      // we have error in the state. we get the error message text\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n//Create or update a profile\n//history object has method push that redirects us to a client side route\n//to know if we are creating or updating we set a parameter edit(false by default)\n//we could also create 2 different funcs to create and update\nexport const createProfile = (formData, history, edit = false) => async (\n  dispatch\n) => {\n  try {\n    //config always because we are sending data\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    //post request to /api/profile\n    const res = await axios.post(\"/api/profile\", formData, config);\n\n    //payload will be the res.data that will actually be the profile\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\"));\n\n    //For redirecting in an action we cant do it with the Redirect component\n    // So we have to pass it the history object that has the push method on it\n    if (!edit) {\n      history.push(\"/dashboard\");\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//\n//Add Experience\n//\nexport const addExperience = (formData, history) => async (dispatch) => {\n  try {\n    //config always because we are sending data\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\n\n    //payload will be the res.data that will actually be the profile\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert(\"Experience Added\", \"success\"));\n\n    //For redirecting in an action we cant do it with the Redirect component\n    // So we have to pass it the history object that has the push method on it\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//\n//Add Education\n//\nexport const addEducation = (formData, history) => async (dispatch) => {\n  try {\n    //config always because we are sending data\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.put(\"/api/profile/education\", formData, config);\n\n    //payload will be the res.data that will actually be the profile\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert(\"Education Added\", \"success\"));\n\n    //For redirecting in an action we cant do it with the Redirect component\n    // So we have to pass it the history object that has the push method on it\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Delete experience\nexport const deleteExperience = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Delete Education\nexport const deleteEducation = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert(\"Education Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Delete account & profile\nexport const deleteAccount = (id) => async (dispatch) => {\n  if (\n    window.confirm(\n      \"Are you sure you want to DELETE YOUR ACCOUNT? This can NOT be undone\"\n    )\n  ) {\n    try {\n      await axios.delete(`/api/profile`);\n\n      dispatch({\n        type: CLEAR_PROFILE,\n      });\n      dispatch({\n        type: ACCOUNT_DELETED,\n      });\n      dispatch(setAlert(\"Your acount has been permanently deleted\", \"success\"));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status },\n      });\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}