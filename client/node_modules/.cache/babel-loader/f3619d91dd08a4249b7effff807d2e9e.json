{"ast":null,"code":"import React,{Fragment,useEffect}from\"react\";import{Link}from\"react-router-dom\";import PropTypes from\"prop-types\";import{connect}from\"react-redux\";import{getCurrentProfile,deleteAccount}from\"../../actions/profile\";import Spinner from\"../layout/Spinner\";import DashboardCard from\"./DashboardCard\";import DashboardActions from\"./DashboardActions\";import Experience from\"./Experience\";import Education from\"./Education\";var Dashboard=function Dashboard(_ref){var getCurrentProfile=_ref.getCurrentProfile,deleteAccount=_ref.deleteAccount,user=_ref.auth.user,_ref$profile=_ref.profile,profile=_ref$profile.profile,skills=_ref$profile.skills,loading=_ref$profile.loading;useEffect(function(){getCurrentProfile();},[getCurrentProfile]);return loading&&profile===null?/*#__PURE__*/React.createElement(Spinner,null):/*#__PURE__*/React.createElement(\"div\",{className:\"dashboard-page-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"dashboard-header\"},/*#__PURE__*/React.createElement(\"h1\",{className:\"large text-primary\"},\"Profile\"),/*#__PURE__*/React.createElement(\"p\",{className:\"lead\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-user\"}),\" Welcome \",user&&user.name)),/*#__PURE__*/React.createElement(DashboardActions,{className:\"dashboard-actions-container\"}),profile!==null?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"dashboard-main-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"dashboard-aside-container\"},/*#__PURE__*/React.createElement(DashboardCard,{profile:profile,className:\"dashboard-card\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"dashboard-skills .bg-grey-light\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"text-primary font2-reg\"},\"Skill Set\"),/*#__PURE__*/React.createElement(\"div\",{className:\"dashboard-skills-list\"},profile.skills.map(function(skill,index){return/*#__PURE__*/React.createElement(\"div\",{key:index,className:\"dashboard-eachSkill\"},skill);})))),/*#__PURE__*/React.createElement(\"div\",{className:\"dashboard-edu-and-exp-container\"},/*#__PURE__*/React.createElement(Experience,{experience:profile.experience}),/*#__PURE__*/React.createElement(Education,{education:profile.education}),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-danger-secondary btn-delete-profile\",onClick:function onClick(){return deleteAccount();}},\"Delete My Account\")))):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"p\",null,\"You have not filled up your profile yet, please add some information\"),/*#__PURE__*/React.createElement(Link,{to:\"/create-profile\",className:\"btn btn-primary my-1\"},\"Create Profile\")));};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,profile:state.profile,deleteAccount:PropTypes.func.isRequired};};export default connect(mapStateToProps,{getCurrentProfile:getCurrentProfile,deleteAccount:deleteAccount})(Dashboard);{/* <div className=\"dashboard-skills .bg-grey-light\">\n              <h2 className=\"text-primary font2-reg\">Skill Set</h2>\n             \n              <div className=\"skills-list-profile\">\n                {profile.skills.map((skill, index) => (\n                  <div key={index} className=\"skill skill-profile\">\n                    {skill}\n                  </div>\n                ))}\n              </div>\n            </div> */}","map":{"version":3,"sources":["/Users/rodrigomac/WEB-DEVELOPMENT/REACT-PROJECTS/Social-Network-App-MERN/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","Link","PropTypes","connect","getCurrentProfile","deleteAccount","Spinner","DashboardCard","DashboardActions","Experience","Education","Dashboard","user","auth","profile","skills","loading","name","map","skill","index","experience","education","mapStateToProps","state","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profile\";\nimport Spinner from \"../layout/Spinner\";\nimport DashboardCard from \"./DashboardCard\";\nimport DashboardActions from \"./DashboardActions\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile, skills, loading },\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n      <div className=\"dashboard-page-container\">\n        {/* HEADER */}\n        <div className=\"dashboard-header\">\n          <h1 className=\"large text-primary\">Profile</h1>\n          <p className=\"lead\">\n            <i className=\"fas fa-user\"></i> Welcome {user && user.name}\n          </p>\n        </div>\n        {/* ACTIONS */}\n        <DashboardActions className=\"dashboard-actions-container\" />\n\n        {profile !== null ? (\n          <>\n            <div className=\"dashboard-main-container\">\n              {/* CARD */}\n              <div className=\"dashboard-aside-container\">\n                <DashboardCard profile={profile} className=\"dashboard-card\" />\n                <div className=\"dashboard-skills .bg-grey-light\">\n                  <h2 className=\"text-primary font2-reg\">Skill Set</h2>\n                  <div className=\"dashboard-skills-list\">\n                    {profile.skills.map((skill, index) => (\n                      <div key={index} className=\"dashboard-eachSkill\">\n                        {skill}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"dashboard-edu-and-exp-container\">\n                {/* EXPERIENCE */}\n                <Experience experience={profile.experience} />\n                {/* EDUCATION */}\n                <Education education={profile.education} />\n                <button\n                  className=\"btn btn-danger-secondary btn-delete-profile\"\n                  onClick={() => deleteAccount()}\n                >\n                  Delete My Account\n              </button>\n              </div>\n            </div>\n\n            {/* FOOTER */}\n            {/* <button\n            className=\"btn btn-danger btn-delete-profile\"\n            onClick={() => deleteAccount()}\n          >\n            <i className=\"fas fa-user-minus\"></i> Delete My Account\n          </button> */}\n          </>\n        ) : (\n            <Fragment>\n              <p>\n                You have not filled up your profile yet, please add some information\n          </p>\n              <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n                Create Profile\n          </Link>\n            </Fragment>\n          )}\n      </div>\n    );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  // deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n  deleteAccount: PropTypes.func.isRequired,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\n  Dashboard\n);\n\n{\n  /* <div className=\"dashboard-skills .bg-grey-light\">\n              <h2 className=\"text-primary font2-reg\">Skill Set</h2>\n             \n              <div className=\"skills-list-profile\">\n                {profile.skills.map((skill, index) => (\n                  <div key={index} className=\"skill skill-profile\">\n                    {skill}\n                  </div>\n                ))}\n              </div>\n            </div> */\n}\n"]},"metadata":{},"sourceType":"module"}