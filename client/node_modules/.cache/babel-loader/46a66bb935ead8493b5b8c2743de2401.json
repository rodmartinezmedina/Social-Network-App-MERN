{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigomac/WEB-DEVELOPMENT/REACT-PROJECTS/Social-Network-App-MERN/client/src/components/profiles/Profiles.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfiles } from '../../actions/profile';\nimport ProfileItem from './ProfileItem';\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n  let slicedProfiles = profiles.slice(0, 9);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profiles-page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, \"Network Users\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-connectdevelop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), \"Browse and connect with other users\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profiles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, profiles.length > 0 ? // profiles.map((profile) => (\n  //   <ProfileItem key={profile._id} profile={profile} />\n  // ))\n  slicedProfiles.map(profile => /*#__PURE__*/React.createElement(ProfileItem, {\n    key: profile._id,\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"No Profiles found...\"))));\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);","map":{"version":3,"sources":["/Users/rodrigomac/WEB-DEVELOPMENT/REACT-PROJECTS/Social-Network-App-MERN/client/src/components/profiles/Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfiles","ProfileItem","Profiles","profile","profiles","loading","slicedProfiles","slice","length","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEF,EAAAA,WAAF;AAAeG,EAAAA,OAAO,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ;AAAxB,CAAD,KAAqD;AACpET,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIA,MAAIM,cAAc,GAAGF,QAAQ,CAACG,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAArB;AAEA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,gBACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,gBAGN;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAGE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,wCAHF,eAQE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACI,MAAT,GAAkB,CAAlB,GACC;AACA;AACA;AACAF,EAAAA,cAAc,CAACG,GAAf,CAAoBN,OAAD,iBACjB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACO,GAA1B;AAA+B,IAAA,OAAO,EAAEP,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJD,gBAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BATJ,CARF,CAJJ,CADF;AA6BD,CApCD;;AAsCAD,QAAQ,CAACS,SAAT,GAAqB;AACnBX,EAAAA,WAAW,EAAEH,SAAS,CAACe,IAAV,CAAeC,UADT;AAEnBV,EAAAA,OAAO,EAAEN,SAAS,CAACiB,MAAV,CAAiBD;AAFP,CAArB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCb,EAAAA,OAAO,EAAEa,KAAK,CAACb;AADmB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACiB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAA0CE,QAA1C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport { getProfiles } from '../../actions/profile'\nimport ProfileItem from './ProfileItem'\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles()\n  }, [getProfiles])\n\n  let slicedProfiles = profiles.slice(0, 9)\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <div className='profiles-page-container'>\n          <h1 className='large text-primary'>Network Users</h1>\n\n          <p className='lead'>\n            <i className='fab fa-connectdevelop'></i>\n            Browse and connect with other users\n          </p>\n\n          <div className='profiles'>\n            {profiles.length > 0 ? (\n              // profiles.map((profile) => (\n              //   <ProfileItem key={profile._id} profile={profile} />\n              // ))\n              slicedProfiles.map((profile) => (\n                <ProfileItem key={profile._id} profile={profile} />\n              ))\n            ) : (\n              <h4>No Profiles found...</h4>\n            )}\n          </div>\n        </div>\n      )}\n    </Fragment>\n  )\n}\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n})\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles)\n"]},"metadata":{},"sourceType":"module"}