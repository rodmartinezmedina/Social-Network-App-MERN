{"ast":null,"code":"var _jsxFileName = \"/home/rodrigo/WEB-DEVELOPMENT/REACT-PROJECTS/MERN-social-network/client/src/components/post/Post.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getPost } from \"../../actions/post\"; //fpor getting the id from the URL we pull out props.match\n\nconst Post = ({\n  getPost,\n  match,\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date,\n    post,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/profile/${user}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, name))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, text), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Posted on \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"DD/MM/YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }\n  }, date)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => addLike(_id),\n    type: \"button\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-thumbs-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, likes.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 40\n    }\n  }, likes.length))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => removeLike(_id),\n    type: \"button\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-thumbs-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: `/posts/${_id}`,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Discussion\", \" \", comments.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"comment-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, comments.length)), !auth.loading && user === auth.user._id && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => deletePost(_id),\n    type: \"button\",\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  })))));\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost,\n  addLike,\n  removeLike,\n  deletePost\n})(Post);","map":{"version":3,"sources":["/home/rodrigo/WEB-DEVELOPMENT/REACT-PROJECTS/MERN-social-network/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","Link","Moment","PropTypes","connect","Spinner","getPost","Post","match","addLike","removeLike","deletePost","auth","post","_id","text","name","avatar","user","likes","comments","date","loading","params","id","e","length","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport { getPost } from \"../../actions/post\";\n\n//fpor getting the id from the URL we pull out props.match\nconst Post = ({\n  getPost,\n  match,\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date, post, loading },\n}) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <div className=\"post bg-white p-1 my-1\">\n        <div>\n          <Link to={`/profile/${user}`}>\n            <img className=\"round-img\" src={avatar} alt=\"\" />\n            <h4>{name}</h4>\n          </Link>\n        </div>\n        <div>\n          <p className=\"my-1\">{text}</p>\n          <p className=\"post-date\">\n            Posted on <Moment format=\"DD/MM/YYYY\">{date}</Moment>\n          </p>\n          <button\n            onClick={(e) => addLike(_id)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            <i className=\"fas fa-thumbs-up\"></i>{\" \"}\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\n          </button>\n          <button\n            onClick={(e) => removeLike(_id)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            <i className=\"fas fa-thumbs-down\"></i>\n          </button>\n          <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n            Discussion{\" \"}\n            {comments.length > 0 && (\n              <span className=\"comment-count\">{comments.length}</span>\n            )}\n          </Link>\n          {/* user is the post creator. auth.user._id is the logged in user */}\n          {!auth.loading && user === auth.user._id && (\n            <button\n              onClick={(e) => deletePost(_id)}\n              type=\"button\"\n              className=\"btn btn-danger\"\n            >\n              <i className=\"fas fa-times\"></i>\n            </button>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, {\n  getPost,\n  addLike,\n  removeLike,\n  deletePost,\n})(Post);\n"]},"metadata":{},"sourceType":"module"}